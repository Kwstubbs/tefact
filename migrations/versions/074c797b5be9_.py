"""empty message

Revision ID: 074c797b5be9
Revises: 91cb774cbc69
Create Date: 2020-04-17 09:35:50.881999

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '074c797b5be9'
down_revision = '91cb774cbc69'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_book',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('origin_id', sa.VARCHAR(length=128), nullable=True, comment='原始ID'),
    sa.Column('name', sa.VARCHAR(length=20), nullable=True, comment='书名'),
    sa.Column('description', sa.VARCHAR(length=128), nullable=True, comment='描述'),
    sa.Column('author', sa.VARCHAR(length=128), nullable=True, comment='作者'),
    sa.Column('translator', sa.VARCHAR(length=128), nullable=True, comment='译者'),
    sa.Column('press_name', sa.VARCHAR(length=128), nullable=True, comment='出版社'),
    sa.Column('head_image', sa.VARCHAR(length=128), nullable=True, comment='封面'),
    sa.Column('star', sa.VARCHAR(length=128), nullable=True, comment='评分'),
    sa.Column('comment_num', sa.VARCHAR(length=128), nullable=True, comment='评论数'),
    sa.Column('link', sa.VARCHAR(length=128), nullable=True, comment='原始链接'),
    sa.Column('create_time', sa.BigInteger(), nullable=True, comment='注册时间'),
    sa.Column('publish', sa.BigInteger(), nullable=True, comment='出版时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book_tag',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('origin_link', sa.VARCHAR(length=128), nullable=True, comment='原始链接'),
    sa.Column('name', sa.VARCHAR(length=20), nullable=True, comment='标签名'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('edu_base_course_campus', schema=None) as batch_op:
        batch_op.alter_column('base_course_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_essential', schema=None) as batch_op:
        batch_op.alter_column('class_hours',
               existing_type=mysql.FLOAT(),
               server_default='0',
               existing_comment='参考课时',
               existing_nullable=True)

    with op.batch_alter_table('edu_packet_campus', schema=None) as batch_op:
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)
        batch_op.alter_column('packet_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_course_lock', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_remark', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_value', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_subject_campus', schema=None) as batch_op:
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_subject_essential', schema=None) as batch_op:
        batch_op.alter_column('essential_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment='',
               existing_nullable=True)

    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.alter_column('has_connect_org',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='是否通过 org_id 与 组织体系链接',
               existing_nullable=True)

    with op.batch_alter_table('entity_field', schema=None) as batch_op:
        batch_op.alter_column('has_link',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='展示数据是否有跳转链接',
               existing_nullable=True)
        batch_op.alter_column('has_search',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
        batch_op.alter_column('has_sort',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_nullable=True)
        batch_op.alter_column('is_primary',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='是否是主键',
               existing_nullable=True)
        batch_op.alter_column('verify_only',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='唯一',
               existing_nullable=True)
        batch_op.alter_column('verify_require',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='必填',
               existing_nullable=True)

    with op.batch_alter_table('page_section', schema=None) as batch_op:
        batch_op.alter_column('has_add_btn',
               existing_type=mysql.TINYINT(display_width=1),
               type_=sa.Boolean(),
               existing_comment='是否显示添加按钮',
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('page_section', schema=None) as batch_op:
        batch_op.alter_column('has_add_btn',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='是否显示添加按钮',
               existing_nullable=True)

    with op.batch_alter_table('entity_field', schema=None) as batch_op:
        batch_op.alter_column('verify_require',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='必填',
               existing_nullable=True)
        batch_op.alter_column('verify_only',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='唯一',
               existing_nullable=True)
        batch_op.alter_column('is_primary',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='是否是主键',
               existing_nullable=True)
        batch_op.alter_column('has_sort',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
        batch_op.alter_column('has_search',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_nullable=True)
        batch_op.alter_column('has_link',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='展示数据是否有跳转链接',
               existing_nullable=True)

    with op.batch_alter_table('entity', schema=None) as batch_op:
        batch_op.alter_column('has_connect_org',
               existing_type=sa.Boolean(),
               type_=mysql.TINYINT(display_width=1),
               existing_comment='是否通过 org_id 与 组织体系链接',
               existing_nullable=True)

    with op.batch_alter_table('edu_subject_essential', schema=None) as batch_op:
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)
        batch_op.alter_column('essential_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_subject_campus', schema=None) as batch_op:
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_value', schema=None) as batch_op:
        batch_op.alter_column('subject_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_remark', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_student_course_lock', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_packet_campus', schema=None) as batch_op:
        batch_op.alter_column('packet_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    with op.batch_alter_table('edu_essential', schema=None) as batch_op:
        batch_op.alter_column('class_hours',
               existing_type=mysql.FLOAT(),
               server_default=sa.text("'0'"),
               existing_comment='参考课时',
               existing_nullable=True)

    with op.batch_alter_table('edu_base_course_campus', schema=None) as batch_op:
        batch_op.alter_column('campus_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)
        batch_op.alter_column('base_course_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_bin', length=32),
               comment=None,
               existing_comment='',
               existing_nullable=True)

    op.drop_table('book_tag')
    op.drop_table('book_book')
    # ### end Alembic commands ###
